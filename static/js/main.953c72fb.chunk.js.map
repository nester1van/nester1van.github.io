{"version":3,"sources":["projects/randomPictDog/img/defaultpict.png","projects/dogPictsByBreed/img/defaultpict.png","projects/randomPictDog/redux/reducer.js","projects/randomPictDog/redux/actions.js","projects/randomPictDog/redux/debugStore.js","projects/randomPictDog/redux/store.js","projects/randomPictDog/components/ButtonGetDog.js","projects/randomPictDog/components/PictDog.js","projects/randomPictDog/components/FetchingProcess.js","projects/randomPictDog/components/ShowDog.js","projects/randomPictDog/index.js","projects/dogPictsByBreed/redux/numPicts/reducer.js","projects/dogPictsByBreed/redux/numPicts/action.js","projects/dogPictsByBreed/redux/selectedBreed/reducer.js","projects/dogPictsByBreed/redux/selectedBreed/action.js","projects/dogPictsByBreed/redux/allBreeds/actions.js","projects/dogPictsByBreed/redux/allBreeds/reducer.js","projects/dogPictsByBreed/redux/dogPicts/actions.js","projects/dogPictsByBreed/redux/dogPicts/reducer.js","projects/dogPictsByBreed/redux/reducers.js","projects/dogPictsByBreed/redux/debugStore.js","projects/dogPictsByBreed/redux/store.js","projects/dogPictsByBreed/components/ButtonGetAllBreeds.js","projects/dogPictsByBreed/components/GetAllBreed.js","projects/dogPictsByBreed/components/SelectorBreed.js","projects/dogPictsByBreed/components/SelectorNumPicts.js","projects/dogPictsByBreed/components/ButtonGetPicts.js","projects/dogPictsByBreed/components/DogImages.js","projects/dogPictsByBreed/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","isFetching","urlPict","defaultpict","status","reducer","state","action","type","debugStore","store","isDebugging","subscribe","console","log","getState","createStore","applyMiddleware","thunkMiddleware","connect","fetchRandomDog","dispatch","fetch","then","response","json","message","receiveResponse","receiveError","onClick","src","alt","ShowDog","className","RandomPictDog","numPicts","initialSelectedBreed","breed","subbreed","selectedBreed","getAllBreeds","res","breeds","keysMessage","Object","keys","i","length","subbreeds","j","push","transformJSON","initialAllBreeds","allBreeds","getDogPicts","trim","urlDogPicts","urlPicts","initialDogPicts","dogPicts","reducers","combineReducers","children","useEffect","selectBreed","onChange","e","target","value","split","map","objBreed","label","key","selected","setNumPicts","maxNumber","number","toString","num","pict","DogPictsByBreed","GetAllBreed","SelectorNumPicts","App","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.953c72fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultpict.c2962b63.png\";","module.exports = __webpack_public_path__ + \"static/media/defaultpict.c2962b63.png\";","import { SEND_REQUEST, RECEIVE_RESPONSE, RECEIVE_ERROR} from './actions';\r\nimport defaultpict from '../img/defaultpict.png';\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    urlPict: defaultpict,\r\n    status: 'success'\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_REQUEST: \r\n            return {...state, isFetching: true};\r\n        case RECEIVE_RESPONSE:\r\n            return {isFetching: false, urlPict: action.urlPict, status: action.status};\r\n        case RECEIVE_ERROR:\r\n            return {...state, isFetching: false, status: action.status};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import fetch from 'cross-fetch';\r\n\r\n//action types\r\nexport const SEND_REQUEST = 'SEND_REQUEST';\r\nexport const RECEIVE_RESPONSE = 'RECEIVE_RESPONSE';\r\nexport const RECEIVE_ERROR = 'RECEIVE_ERROR';\r\n\r\n//action creators\r\nconst sendRequest = () => ({\r\n    type: SEND_REQUEST\r\n})\r\n\r\nconst receiveResponse = (json) => ({\r\n    type: RECEIVE_RESPONSE,\r\n    urlPict: json.message,\r\n    status: json.status\r\n})\r\n\r\nconst receiveError = (json) => ({\r\n    type: RECEIVE_ERROR,\r\n    status: json.status\r\n})\r\n\r\nconst urlRandomDog = 'https://dog.ceo/api/breeds/image/random';\r\n\r\nexport const fetchRandomDog = () => (dispatch) => {\r\n    dispatch(sendRequest());\r\n    return fetch(urlRandomDog)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            if (json.status === 'success') {\r\n                return dispatch(receiveResponse(json));\r\n            }   else {\r\n                return dispatch(receiveError(json));\r\n            }\r\n        })\r\n}","// import { fetchRandomDog } from './actions';\r\n\r\nconst debugStore = (store, isDebugging ) => {\r\n    if (isDebugging) {\r\n        store.subscribe(() => console.log(store.getState()));\r\n        // store.dispatch(fetchRandomDog());\r\n    }\r\n}\r\n\r\nexport default debugStore;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer from './reducer';\r\nimport debugStore from './debugStore';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\n\r\ndebugStore(store, true);\r\n\r\nexport default store;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchRandomDog } from '../redux/actions';\r\n\r\nconst ButtonGetDog = ({ fetchRandomDog }) => {\r\n    const handleClick = () =>{\r\n        fetchRandomDog();\r\n    }\r\n    return (\r\n        <button onClick={handleClick}>get dog</button>\r\n    )\r\n}\r\n\r\nexport default connect(null, { fetchRandomDog })(ButtonGetDog);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PictDog = ({urlPict}) => {\r\n    return (\r\n        <img src={urlPict} alt=\"dog\"/>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    urlPict: state.urlPict\r\n})\r\n\r\nexport default connect(mapStateToProps)(PictDog);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst FetchingProcess = ({isFetching, status}) => {\r\n    const fetchingProcess = () => {\r\n        if (isFetching) {\r\n            return <p>loading...</p>\r\n        } else if (status === 'success') {\r\n            return <p>success</p>\r\n        } else {\r\n            return <p>error</p>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>{fetchingProcess()}</div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isFetching: state.isFetching,\r\n    status: state.status\r\n})\r\n\r\nexport default connect(mapStateToProps)(FetchingProcess);","import React from 'react';\r\nimport ButtonGetDog from './ButtonGetDog';\r\nimport PictDog from './PictDog';\r\nimport FetchingProcess from './FetchingProcess';\r\nimport './showdog.css';\r\n\r\nconst ShowDog = () => {\r\n    return (\r\n            <div className=\"clearfix\">\r\n                <div className=\"showDog\">\r\n                    <ButtonGetDog/>\r\n                    <FetchingProcess/>\r\n                    <PictDog/>\r\n                </div>\r\n            </div>    \r\n    )\r\n}\r\n\r\nexport default ShowDog;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport ShowDog from './components/ShowDog';\r\n\r\nfunction RandomPictDog() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ShowDog/>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default RandomPictDog;","import { SET_NUM_PICTS } from './action';\r\n\r\nconst initialState = 1;\r\n\r\nconst numPicts = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_NUM_PICTS:\r\n            return action.numPicts;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default numPicts;","// action type\r\nexport const SET_NUM_PICTS = 'SET_NUM_PICTS';\r\n\r\n//action creator\r\nexport const setNumPicts = (numPicts) => ({\r\n    type: SET_NUM_PICTS,\r\n    numPicts\r\n});","import { SELECT_BREED } from './action';\r\n\r\nconst initialSelectedBreed = {\r\n    breed: 'bulldog',\r\n    subbreed: 'english'\r\n};\r\n\r\nconst selectedBreed = (state = initialSelectedBreed, action) => {\r\n    switch (action.type) {\r\n        case SELECT_BREED:\r\n            return action.selectedBreed;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default selectedBreed;","// action type\r\nexport const SELECT_BREED = \"SELECT_BREED\";\r\n\r\n// action creator \r\nexport const selectBreed = (selectedBreed) => ({\r\n    type: SELECT_BREED,\r\n    selectedBreed\r\n});","import fetch from 'cross-fetch';\r\n\r\n// action types\r\nexport const REQ_ALL_BREEDS = 'REQ_ALL_BREEDS';\r\nexport const RES_ALL_BREEDS = 'RES_ALL_BREEDS';\r\nexport const ERR_ALL_BREEDS = 'ERR_ALL_BREEDS';\r\n\r\n// action creators\r\nconst reqAllBreeds = () => ({\r\n    type: REQ_ALL_BREEDS,\r\n    isFetching: true\r\n});\r\n\r\nconst resAllBreeds = ({ breeds, status }) => ({\r\n    type: RES_ALL_BREEDS,\r\n    breeds,\r\n    status,\r\n    isFetching: false\r\n});\r\n\r\nconst errAllBreeds = ({ status }) => ({\r\n    type: ERR_ALL_BREEDS,\r\n    status,\r\n    isFetching: false\r\n});\r\n\r\n// transform JSON { message, status } to { breeds, status }\r\nconst transformJSON = ({ message, status }) => {\r\n    const keysMessage = Object.keys(message);\r\n    const breeds = [];\r\n    for (let i = 0; i < keysMessage.length; i++) {\r\n        const subbreeds = message[keysMessage[i]];\r\n        if (subbreeds.length === 0) {\r\n            breeds.push({\r\n                breed: keysMessage[i],\r\n                subbreed: ''\r\n            });\r\n            continue;\r\n        }\r\n        for(let j = 0; j < subbreeds.length; j++) {\r\n            breeds.push({\r\n                breed: keysMessage[i],\r\n                subbreed: subbreeds[j]\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        breeds,\r\n        status\r\n    }\r\n};\r\n\r\n// url creator\r\nconst urlAllBreeds = () => 'https://dog.ceo/api/breeds/list/all';\r\n\r\n// async action creator\r\nexport const getAllBreeds = () => (dispatch) => {\r\n    dispatch(reqAllBreeds());\r\n    return fetch(urlAllBreeds())\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if (json.status === 'success') {\r\n                dispatch(resAllBreeds(transformJSON(json)));\r\n            } else {\r\n                dispatch(errAllBreeds(json));\r\n            }\r\n        });\r\n};","import { REQ_ALL_BREEDS, \r\n         RES_ALL_BREEDS, \r\n         ERR_ALL_BREEDS } from './actions';\r\n\r\nconst initialAllBreeds = {\r\n    breeds: [{\r\n        breed: 'bulldog',\r\n        subbreed: 'english'\r\n    }],\r\n    status: 'success',\r\n    isFetching: true\r\n};\r\n\r\nconst allBreeds = (state = initialAllBreeds, action) => {\r\n    const {type, breeds, status, isFetching} = action;\r\n    switch (type) {\r\n        case REQ_ALL_BREEDS:\r\n            return {...state, isFetching};\r\n        case RES_ALL_BREEDS:\r\n            return {breeds, status, isFetching};\r\n        case ERR_ALL_BREEDS:\r\n            return {...state, status, isFetching};\r\n        default: \r\n            return state;\r\n    };\r\n};\r\n\r\nexport default allBreeds;","import fetch from 'cross-fetch';\r\n\r\n// action type\r\nexport const REQ_DOG_PICTS = 'REQ_DOG_PICTS';\r\nexport const RES_DOG_PICTS = 'RES_DOG_PICTS';\r\nexport const ERR_DOG_PICTS = 'ERR_DOG_PICTS';\r\n\r\n// action creator\r\nconst reqDogPicts = () => ({\r\n    type: REQ_DOG_PICTS,\r\n    isFetching: true\r\n});\r\nconst resDogPicts = ({ urlPicts, status }) => ({\r\n    type: RES_DOG_PICTS,\r\n    urlPicts,\r\n    status,\r\n    isFetching: false\r\n});\r\nconst errDogPicts = ({ status }) => ({\r\n    type: ERR_DOG_PICTS,\r\n    status,\r\n    isFetching: false\r\n});\r\n\r\n// transform JSON { message, status } to { urlPicts, status }\r\nconst transformJSON =  ({message, status }) => ({ urlPicts: message, status });\r\n\r\n// URL creator\r\nconst urlDogPicts = ({ selectedBreed, numPicts }) => {\r\n    const { breed, subbreed } = selectedBreed;\r\n    if (breed.trim().length === 0) {\r\n        return `https://dog.ceo/api/breeds/image/random/${numPicts}`;\r\n    } else if (subbreed.trim().length === 0) {\r\n        return `https://dog.ceo/api/breed/${breed}/images/random/${numPicts}`;\r\n    } else {\r\n        return `https://dog.ceo/api/breed/${breed}/${subbreed}/images/random/${numPicts}`;\r\n    }\r\n\r\n};\r\n\r\n// async action creator\r\n\r\nexport const getDogPicts = () => (dispatch, getState) => {\r\n    const { selectedBreed, numPicts } = getState();\r\n    dispatch(reqDogPicts());\r\n    return fetch(urlDogPicts({selectedBreed, numPicts}))\r\n    .then(res => res.json())\r\n    .then (json => {\r\n        const { message, status } = json;\r\n        if (status === 'success') {\r\n            dispatch(resDogPicts(transformJSON({message, status})));\r\n        } else {\r\n            dispatch(errDogPicts({ status }));\r\n        }\r\n    });\r\n};","import { REQ_DOG_PICTS, RES_DOG_PICTS, ERR_DOG_PICTS }from './actions';\r\nimport defaultpict from '../../img/defaultpict.png';\r\n\r\nconst initialDogPicts = {\r\n    urlPicts: [defaultpict],\r\n    status: 'success',\r\n    isFetching: false\r\n};\r\n\r\nconst dogPicts = (state = initialDogPicts, action) => {\r\n    const { type, urlPicts, status, isFetching } = action;\r\n    switch (type) {\r\n        case REQ_DOG_PICTS:\r\n            return {...state, isFetching};\r\n        case RES_DOG_PICTS:\r\n            return {urlPicts, status, isFetching};\r\n        case ERR_DOG_PICTS:\r\n            return {...state, status, isFetching};\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default dogPicts;","import { combineReducers } from 'redux';\r\nimport numPicts from './numPicts/reducer';\r\nimport selectedBreed from './selectedBreed/reducer';\r\nimport allBreeds from './allBreeds/reducer';\r\nimport dogPicts from './dogPicts/reducer';\r\n\r\nconst reducers = combineReducers({\r\n    numPicts,\r\n    selectedBreed,\r\n    allBreeds,\r\n    dogPicts\r\n});\r\n\r\nexport default reducers;","// import { setNumPicts } from '../redux/numPicts/action';\r\n// import { selectBreed } from '../redux/selectedBreed/action';\r\n// import { getAllBreeds } from '../redux/allBreeds/actions';\r\n// import { getDogPicts } from '../redux/dogPicts/actions';\r\n\r\nconst debugStore = (store, isDebugging) => {\r\n    store.subscribe(() => console.log(store.getState()));\r\n    // store.dispatch(setNumPicts(2));\r\n    // store.dispatch(selectBreed({breed: 'buhund', subbreed: 'norwegian'}));\r\n    // store.dispatch(getAllBreeds());\r\n    // store.dispatch(getDogPicts());\r\n};\r\n\r\nexport default debugStore;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducers from './reducers';\r\nimport debugStore from './debugStore';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n\r\ndebugStore(store, true);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAllBreeds } from '../redux/allBreeds/actions';\r\n\r\nconst ButtonGetAllBreeds = ({ getAllBreeds }) => {\r\n    return (\r\n        <button onClick={() => getAllBreeds()}>\r\n            get all breeds\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default connect(null, {getAllBreeds})(ButtonGetAllBreeds);","import React, { useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAllBreeds } from '../redux/allBreeds/actions';\r\nimport ButtonGetAllBreeds from './ButtonGetAllBreeds';\r\n\r\nconst GetAllBreeds = ({ children, allBreeds, getAllBreeds }) => {\r\n    const { status, isFetching } = allBreeds;\r\n\r\n    useEffect(() => {\r\n        getAllBreeds();\r\n    }, [])\r\n\r\n    const processingGetAllBreads = () => {\r\n        if (isFetching) {\r\n            return (<p>loading...</p>)\r\n        } else if (status === 'success') {\r\n            return [children]\r\n        } else {\r\n            return (<div>\r\n                        <p>Error</p>\r\n                        <p><ButtonGetAllBreeds/></p>\r\n                    </div>)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {processingGetAllBreads()}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    allBreeds: state.allBreeds\r\n});\r\n\r\nexport default connect(mapStateToProps, {getAllBreeds})(GetAllBreeds);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectBreed } from '../redux/selectedBreed/action';\r\nimport { getDogPicts } from '../redux/dogPicts/actions';\r\n\r\nconst SelectorBreed = ({ allBreeds, \r\n                         selectedBreed, \r\n                         selectBreed, \r\n                         getDogPicts }) => {\r\n    const { breeds } = allBreeds;\r\n\r\n    const handleChange = (e) => {\r\n        const [ breed, subbreed ] = e.target.value.split(',');\r\n        selectBreed({breed, subbreed});\r\n        getDogPicts();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <select onChange={handleChange}>\r\n                {breeds.map(objBreed => {\r\n                    const label = objBreed.breed + ' ' + objBreed.subbreed;\r\n                    const value = objBreed.breed + ',' + objBreed.subbreed;\r\n                    const fnSelected = () => \r\n                        ( objBreed.breed === selectedBreed.breed \r\n                        && objBreed.subbreed === selectedBreed.subbreed );\r\n                    \r\n                    return <option \r\n                            key={label} label={label} value={value}\r\n                            selected={fnSelected()}/> \r\n                })}\r\n            </select>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    allBreeds: state.allBreeds,\r\n    selectedBreed: state.selectedBreed\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {selectBreed, getDogPicts})(SelectorBreed);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setNumPicts } from '../redux/numPicts/action';\r\nimport { getDogPicts } from '../redux/dogPicts/actions';\r\n\r\nconst NumPicts = ({ maxNumber, numPicts, setNumPicts, getDogPicts }) => {\r\n    const number = [];\r\n    for (let i = 1; i <= maxNumber; i++) number[i] = i.toString();\r\n\r\n    const handleChange = (e) => {\r\n        const num = e.target.value;\r\n        setNumPicts(num);\r\n        getDogPicts();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <select onChange={handleChange}>\r\n                {number.map(num => \r\n                    <option \r\n                        key={num} label={num} value={num} \r\n                        selected={(numPicts === num) ? true : false}/>\r\n                )}\r\n            </select>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    numPicts: state.numPicts,\r\n});\r\n\r\nexport default connect(mapStateToProps, \r\n                       {setNumPicts, getDogPicts})(NumPicts);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getDogPicts } from '../redux/dogPicts/actions';\r\n\r\nconst ButtonGetPicts = ({ getDogPicts }) => {\r\n    return (\r\n        <button onClick={getDogPicts}>\r\n            Fetch dog picts\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default connect(null, {getDogPicts})(ButtonGetPicts);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst DogImages = ({ urlPicts }) => {\r\n    return (\r\n        <div className=\"clearfix\">\r\n            {urlPicts.map(pict => {\r\n                return  <div className='imageGallery'>\r\n                            <img src={pict} alt='dog' key={pict}/>\r\n                        </div>\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    urlPicts: state.dogPicts.urlPicts\r\n});\r\n\r\nexport default connect(mapStateToProps)(DogImages);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport GetAllBreed from './components/GetAllBreed';\nimport SelectorBreed from './components/SelectorBreed';\nimport SelectorNumPicts from './components/SelectorNumPicts';\nimport ButtonGetPicts from './components/ButtonGetPicts';\nimport DogImages from './components/DogImages';\nimport './index.css';\n\nconst DogPictsByBreed = () => {\n    return (\n        <Provider store={store}>\n                <GetAllBreed>\n                    <div className=\"clearfix\">\n                        <SelectorBreed/>\n                        <SelectorNumPicts maxNumber={5}/>\n                        <ButtonGetPicts/>\n                    </div>\n                    <DogImages/>\n                </GetAllBreed>\n        </Provider>\n    );\n};\n\nexport default DogPictsByBreed;","import React from 'react';\nimport {BrowserRouter as Router, Link, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport RandomPictDog from '../src/projects/randomPictDog/';\nimport DogPictsByBreed from './projects/dogPictsByBreed';\n\nfunction App() {\n  return (\n    <>\n      <header></header>\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link className=\"link\" to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link className=\"link\" to=\"/randompictdog\">RandomPictDog</Link>\n              </li>\n              <li>\n                <Link className=\"link\" to =\"/dogpictsbybreed\">DogPictsByBreed</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <main>\n              <Route exact path=\"/\">Home</Route>\n              <Route path=\"/randompictdog\"><RandomPictDog/></Route>\n              <Route path=\"/dogpictsbybreed\"><DogPictsByBreed/></Route>\n            </main>\n          </Switch>\n        </div>\n      </Router>\n      <footer/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}